{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part 1", "context": "Identity users who has contacted a recently added IOC in the past 90 days", "baseline": "ThreatIntelligenceIndicator\n| where Active has 'true'\n| join kind=inner (\n    CommonSecurityLog \n    | where TimeGenerated > ago(90d)\n) on $left.NetworkIP == $right.DestinationIP\n| summarize by SourceUserName"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part 1", "context": "Visualize the severity of your Microsoft Sentinel incidents per month", "baseline": "SecurityIncident \n| where TimeGenerated > ago(365d) \n| summarize Count=dcount(IncidentNumber)by Severity, startofmonth(TimeGenerated) \n| render columnchart with (kind=unstacked, title=\"Microsoft Sentinel Incident Severity\")"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part 1", "context": "List the incidents in Sentinel within the past month, sorted by alert level, and attach the number of alerts for this month after each incident.", "baseline": "SecurityIncident \n| where TimeGenerated > ago(30d) \n| summarize IncidentCount=count() by Severity,Title,bin(TimeGenerated,30d) \n| sort by Severity"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part 1", "context": "Assigned incidents which are still open", "baseline": "SecurityIncident\n| extend AssignedTo = tostring(parse_json(Owner)['assignedTo'])\n| where isnotempty(AssignedTo)\n| where Status in (dynamic(['New', 'Active']))"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part 1", "context": "Give me all Cloud Admin User which starts with aada and ends with the domain aad.domain.com", "baseline": "IdentityInfo\n| summarize arg_max(TimeGenerated,*) by AccountUPN \n| where AssignedRoles has \"Administrator\"\n| where AccountUPN startswith \"aada\"\n| where AccountUPN endswith \"aad.domain.com\""}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part 1", "context": "Get a list of our domain administrators", "baseline": "IdentityInfo\n| mv-expand AssignedRoles\n| where AssignedRoles =~ \"Global Administrator\"\n| distinct AccountUPN"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part 1", "context": "what security alerts occurred from midnight to 10AM on 2024-03-09, and who were those alerts assigned to?", "baseline": "SecurityIncident\n| where TimeGenerated between(datetime(\"2024-03-09T00:00:00\")..datetime(\"2024-03-09T10:00:00\"))\n| extend AssignedTo = tostring(parse_json(Owner)['userPrincipalName'])"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part2", "context": "Help me identify which users attempted to bypass conditional access rule in Azure Active Directory during the last 12 days and tell me what Ipaddress they were using", "baseline": "AADNonInteractiveUserSignInLogs\n| where TimeGenerated > ago(12d)\n| where ConditionalAccessStatus =~ \"failure\"\n| where ResultType != 0\n| summarize  make_set(UserPrincipalName),make_set(Location) by IPAddress"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part2", "context": "who are the users who logged in from unusual location in the past 14 days", "baseline": "BehaviorAnalytics \n| where ActionType == \"Sign-in\" \n| where ActivityInsights.FirstTimeUserConnectedFromCountry == True \n| where TimeGenerated >= ago(14d)"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part2", "context": "Give me a list of the devices and their ipaddresses with the most RDP connections ", "baseline": "VMConnection\n| where Direction == \"inbound\"\n| where Protocol == \"tcp\"\n| where DestinationPort == 3389\n| summarize NumberOfConnections = count() by Computer, RemoteIp"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part2", "context": "give me a list of 10 critical incidents", "baseline": "SecurityIncident\n | where Severity == \"High\"\n | take 10"}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part2", "context": "AAD sign in events from accounts with privileged roles for the last 7 days", "baseline": "Event \n| where TimeGenerated > ago(7d) \n| where EventLog has \"System\""}
{"Data source": "NL2KQL sentinel survey cleaned.xlsx - survey part2", "context": "Show me the risk details, level and state for 'johndoe'", "baseline": "IdentityInfo \n| where AccountUPN contains \"johndoe\" \n| project AccountUPN, RiskLevel, RiskLevelDetails, RiskState"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMBoundPort", "context": "show me machines whose Ip is not 127.0.0.1 having open ports. summarize the count by Computer, Machine,Port and order in descending order", "baseline": "VMBoundPort\n| where Ip != \"127.0.0.1\"\n| summarize by Computer, Machine, Port, Protocol\n| summarize OpenPorts=count() by Computer, Machine,Port\n| order by OpenPorts desc"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMBoundPort", "context": "For last 7 days list me computer, port and processname associated with the port and order port by ascending order", "baseline": "VMBoundPort\n| where TimeGenerated > ago(7d)\n| distinct Computer, Port,PortId,Protocol, ProcessName\n| order by Port asc"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMBoundPort", "context": "show me machines whose Ip is not 127.0.0.1 and having open ports. Order BytesSent in descending order", "baseline": "VMBoundPort\n| where Ip != \"127.0.0.1\"\n| project TimeGenerated,Computer,Machine,Port,Protocol,BytesReceived,BytesSent\n| order by BytesReceived,BytesSent desc"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMBoundPort", "context": "show me machines whose Ip is not 127.0.0.1 and having open ports. join VMComputer table on Computer column", "baseline": "VMBoundPort\n| where Ip != \"127.0.0.1\"\n| project Computer\n| join kind = inner ( VMComputer ) on Computer"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSGuardDuty", "context": "Show me alerts from AWSGuardDuty regarding the Crypto activities", "baseline": "AWSGuardDuty\n| where ActivityType contains \"Crypto\"\n| extend ResourceDetails = todynamic(parse_json(ResourceDetails))\n| extend ResourceType = ResourceDetails.resourceType\n| extend AccessKeydetails = ResourceDetails.accessKeyDetails\n| extend AccessKeyId = AccessKeydetails.accessKeyId\n| extend PrincipalId = AccessKeydetails.principalId\n| extend UserType = AccessKeydetails.userType\n| extend Username = AccessKeydetails.userName\n| project TimeGenerated, ResourceType, AccessKeyId,PrincipalId,AccountId,UserType,Username,Id,Arn,ActivityType,Severity,Title,Description"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSGuardDuty", "context": "Show me alerts from AWSGuardDuty for unauthorized access", "baseline": "AWSGuardDuty\n| where ActivityType has_any (\"UnauthorizedAccess:IAMUser/TorIPCaller\", \"UnauthorizedAccess:IAMUser/MaliciousIPCaller.Custom\", \n \"UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration.OutsideAWS\", \"UnauthorizedAccess:IAMUser/InstanceCredentialExfiltration.InsideAWS\",\n\"UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B\",\"UnauthorizedAccess:IAMUser/MaliciousIPCaller\")\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSGuardDuty", "context": "Show me alerts from AWSGuardDuty for credential access alerts for services like Kubernetes and RDS", "baseline": "AWSGuardDuty\n| where ActivityType has_any (\n          \"CredentialAccess:Kubernetes/MaliciousIPCaller\",\n          \"CredentialAccess:Kubernetes/SuccessfulAnonymousAccess\",\n          \"CredentialAccess:Kubernetes/TorIPCaller\",\n          \"CredentialAccess:RDS/AnomalousBehavior.SuccessfulBruteForce\",\n          \"CredentialAccess:RDS/AnomalousBehavior.SuccessfulLogin\",\n          \"CredentialAccess:RDS/TorIPCaller.FailedLogin\",\n          \"CredentialAccess:RDS/TorIPCaller.SuccessfulLogin\",\n          \"CredentialAccess:RDS/MaliciousIPCaller.SuccessfulLogin\",\n          \"CredentialAccess:RDS/MaliciousIPCaller.FailedLogin\")"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSGuardDuty", "context": "Show me Threat type alerts from AWSGuardDuty", "baseline": "AWSGuardDuty\n| where Type == 'Threat'"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSGuardDuty", "context": "Show me alerts from AWSGuardDuty for EC2 detection of Malicious or Suspicious File", "baseline": "AWSGuardDuty\n| where ActivityType has_any (\"Execution:EC2/MaliciousFile\",\"Execution:EC2/SuspiciousFile\")"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSGuardDuty", "context": "Show me alerts from AWSGuardDuty for cryptomining activity detected on EC2 or on a container", "baseline": "AWSGuardDuty\n| where ActivityType contains \"Impact:Runtime/CryptoMinerExecuted\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "list all managed identity sign ins of serviceprincipalnames contaning dev ", "baseline": "AADManagedIdentitySignInLogs\n| where ServicePrincipalName contains \"dev\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "search for managed identity sign ins of service principal id 12345678-c123-abcd-9876-90cfc1bcf55f\nand ground location, ipaddress, principalname, correlationid by principalid", "baseline": "AADManagedIdentitySignInLogs\n| where ServicePrincipalId == \"12345678-c123-abcd-9876-90cfc1bcf55f\"\n| summarize make_set(CorrelationId),make_set(ServicePrincipalName),make_set(IPAddress),make_set(Location) by TimeGenerated,ServicePrincipalId"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "For last 30 days, show me successful sign ins and summarize make set of ResourceDisplayName by ServicePrinicpalName", "baseline": "AADManagedIdentitySignInLogs\n| where TimeGenerated > ago(30d)\n| where ResultType == 0\n| summarize ResourcesAccessed=make_set(ResourceDisplayName) by ServicePrincipalName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "In last 90 days, Summarize the Azure resources by make set of ResourceDisplayName, distinct count of ResourceDisplayName by ServicePrincipalName that each of your managed identities are accessing and sort the distinct resource accessed by descending order", "baseline": "AADManagedIdentitySignInLogs\n| where TimeGenerated > ago(90d)\n| where ResultType == 0\n| summarize ['List of Azure Resources Accessed']=make_set(ResourceDisplayName), ['Distinct Resources Accessed']=dcount(ResourceDisplayName) by ServicePrincipalName\n| sort by ['Distinct Resources Accessed'] desc "}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "Find all successful managed identity signins from recent 30 days that didn't login in the last 10 days", "baseline": "AADManagedIdentitySignInLogs\n| where TimeGenerated > ago (10d) \n| where ResultType == \"0\"\n| distinct ServicePrincipalId, ResourceIdentity\n| join kind=rightanti (\n    AADManagedIdentitySignInLogs\n    | where TimeGenerated > ago (30d)\n    | where ResultType == \"0\"\n    )\n    on ServicePrincipalId, ResourceIdentity\n| distinct ServicePrincipalId, ServicePrincipalName, ResourceIdentity, ResourceDisplayName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "search for managed identity sign ins which are accessing resource name called Azure Key Vault. make a table TimeGenerated, Category, CorrelationId, ServicePrincipalId,ServicePrincipalName, ResourceDisplayName,Type", "baseline": "AADManagedIdentitySignInLogs\n| where ResultType == 0\n| where ResourceDisplayName contains \"Azure Key Vault\"\n| project TimeGenerated, Category, CorrelationId, ServicePrincipalId,ServicePrincipalName, ResourceDisplayName,Type"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "find any Managed Identities that have not successfully signed on for more than 30 days", "baseline": "AADManagedIdentitySignInLogs\n| where ResultType == \"0\"\n| summarize arg_max(TimeGenerated, *) by AppId\n| extend LastSignin= datetime_diff(\"day\", now(), TimeGenerated)\n| where LastSignin > 30"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "list 100 records for serviceprincipalid \"12345678-abcd-abcd-1234-ac0cf667c09e\" from Managed Identity Sign ins join the Azureactivity table on Serviceprincipalid and Caller columns", "baseline": "AADManagedIdentitySignInLogs\n| where ServicePrincipalId == \"12345678-abcd-abcd-1234-ac0cf667c09e\"\n| project TimeGenerated,AppId,ServicePrincipalId,ServicePrincipalName\n| join kind=inner (AzureActivity) on $left.ServicePrincipalId == $right.Caller \n | limit 100"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADManagedIdentitySignInLogs", "context": "Show 100 successful managed identity sign ins join with AADServicePrincipalSinginlogs where logins is unsuccessful on ServicePrincipalName Columns with more than one application", "baseline": "AADManagedIdentitySignInLogs \n| where ResultType == 0\n| project TimeGenerated, Category, CorrelationId, ServicePrincipalId,ServicePrincipalName, ResourceDisplayName, IPAddress, Location\n| join kind=inner (AADServicePrincipalSignInLogs\n| where ResultType != \"0\"\n| summarize applicationCount = dcount(ResourceDisplayName), applicationSet = makeset(ResourceDisplayName) by TimeGenerated, ServicePrincipalName, IPAddress, ResultType\n| where applicationCount >= 1\n| extend TimeGenerated, AccountCustomEntity = ServicePrincipalName, IPCustomEntity = IPAddress, ResultType ) on $left.ServicePrincipalName == $right.ServicePrincipalName\n| limit 100"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "What are VM Computers with published by Microsoft Windows Server?", "baseline": "VMComputer\n| where AzureImagePublisher == \"MicrosoftWindowsServer\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "What are VM Computers with servers located in the east? Display the name of the computer.", "baseline": "VMComputer\n| where AzureLocation == \"eastus2\"\n| project Computer"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "What are VM Computers with physical memories greater than 8190 MB's? Show the name of the computer and the physical memory in MB.", "baseline": "VMComputer\n| where PhysicalMemoryMB > 8190\n| project Computer, PhysicalMemoryMB"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "For all VM Computers, summarize make set of CPU's by CPU speed?", "baseline": "VMComputer\n| summarize cpu = make_set(Cpus) by CpuSpeed"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "For all VM Computers with servers in west Europe, summarize make sent of Azure Resource Group by Azure Resource Name?", "baseline": "VMComputer\n| where AzureLocation == \"westeurope\"\n| summarize resoucegroup = make_set(AzureResourceGroup) by AzureResourceName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "Count how many VM Computers per size of Azure VM?", "baseline": "VMComputer\n| summarize Count = count() by AzureSize"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "Count how many \"windows\" and how many \"linux\" operating system in the VM Computer log?", "baseline": "VMComputer\n| summarize Count = count() by OperatingSystemFamily"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "Count the windows operating systems in the  VM Computer log per version?", "baseline": "VMComputer\n| where OperatingSystemFamily == \"windows\"\n| summarize Count = count() by OperatingSystemFullName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMComputer", "context": "What are VM Computers with boot time from 2024/03/08 to 2024/03/09", "baseline": "VMComputer\n| where BootTime between  (datetime(2024-03-08) .. datetime(2024-03-09))"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "What are VM Processes where the computer is \"test-linux\"?", "baseline": "VMProcess\n| where Computer == \"test-linux\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "Count how many VM Processes per executable name and display name?", "baseline": "VMProcess\n| summarize Count = count() by ExecutableName, DisplayName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "Display the command line and executable path of VM Processes with Systems32 working directory? ", "baseline": "VMProcess\n| where WorkingDirectory == @\"C:\\Windows\\system32\\\"\n| project CommandLine, ExecutablePath"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "For all VM Processes, summarize make set of process group name by the display name of the process?", "baseline": "VMProcess\n| summarize Group = make_set(Group) by DisplayName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "What are VM Processes with display name of \"gc_worker\"? Show the first PID of the process pool.", "baseline": "VMProcess\n| where DisplayName == \"gc_worker\"\n| project FirstPid"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "Show the process description for all Microsoft Windows Operating Systems?", "baseline": "VMProcess\n| where ProductName == \"Microsoft\u00ae Windows\u00ae Operating System\"\n| project Description"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "Count how many VM processes for the product Microsoft Monitoring Agent per product version?", "baseline": "VMProcess\n| where ProductName == \"Microsoft Monitoring Agent\"\n| summarize Count = count() by ProductVersion"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "What are Microsoft Windows Operating System VM processes with push notifications as one of the services?", "baseline": "VMProcess\n| where ProductName == \"Microsoft\u00ae Windows\u00ae Operating System\"\n| where Services != \"\"\n| mv-expand Services\n| where Services[\"DisplayName\"] contains \"push notifications\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "What are VM Processes in the last 24 days processed under \"system\"?", "baseline": "VMProcess\n| where TimeGenerated >= ago(24d)\n| where UserName == \"System\" or UserName == \"SYSTEM\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMProcess", "context": "What are the processes VM's make to conect to \"microsoft.com\" and \"google.com\"?", "baseline": "let domains = dynamic([\"microsoft.com\", \"google.com\"]);\nVMProcess\n | project AgentId, Machine, Process, UserName, UserDomain, ExecutablePath, CommandLine, FirstPid\n      | join kind = inner (VMConnection \n     | extend DNSName = set_union(todynamic(RemoteDnsCanonicalNames),todynamic(RemoteDnsQuestions))\n      | mv-expand DNSName\n      | where isnotempty(DNSName)\n      | where DNSName has_any (domains)\n      | extend IPCustomEntity = RemoteIp\n      | summarize TimeGenerated = arg_min(TimeGenerated, *), requests = count() by IPCustomEntity, DNSName = tostring(DNSName), AgentId, Machine, Process\n  ) on AgentId, Machine, Process"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - IdentityInfo", "context": "For last 7 day, show me all user identity info and make a table of AccountUPN,AccountName,AccountDisplayName,JobTitle,City,Country", "baseline": "IdentityInfo\n    | where TimeGenerated > ago (7d)\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\n    | project AccountUPN,AccountName,AccountDisplayName,JobTitle,City,Country"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - IdentityInfo", "context": "List all disabled accounts from the IdentityInfo table from last 180 days. ", "baseline": "IdentityInfo\n| where TimeGenerated >= ago(180d)\n| where AccountUPN contains \"\"\n| summarize arg_max(TimeGenerated, *) by AccountUPN\n| project AccountUPN,IsAccountEnabled\n| where IsAccountEnabled == \"false\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - IdentityInfo", "context": "Show set of roles associted with an account and show if account is active", "baseline": "IdentityInfo\n    | summarize arg_max(TimeGenerated, *) by AccountObjectId\n    | mv-expand AssignedRoles\n    | extend RoleName = tostring(AssignedRoles)\n    | summarize Roles=make_set(RoleName), count() by AccountName,AccountUPN,IsAccountEnabled"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "Can you show anomalies generated by the active analytics rules with a score of at least 0.6?", "baseline": "Anomalies\n| where Score >= 0.6"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "Count how many flighting anomalies generated by active analytics rules per anomaly reasons?", "baseline": "Anomalies\n| where RuleStatus == \"Flighting\"\n| summarize Count = count() by tostring(AnomalyReasons[\"Name\"])"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "Show the names of anomalies generated by suspicious volume of logins to user acccount?", "baseline": "Anomalies\n| where RuleName == \"Suspicious volume of logins to user account\"\n| project UserName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "Count how many anomalies that are not domained joined by the name of anomaly template?", "baseline": "Anomalies\n| where Entities[0][\"IsDomainJoined\"] == false\n| summarize Count = count() by AnomalyTemplateName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "Provide anomalies generated by activite analytic rules that involves the tactic of initial access?", "baseline": "Anomalies\n| where Tactics contains \"InitialAccess\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "What are anomalies generated by active analytics rules involving UEBA anomalous account deletion? Show the account name that was deleted.", "baseline": "Anomalies\n| where AnomalyTemplateName == \"UEBA Anomalous Account Deletion\"\n| project UserInsights[\"AccountDisplayName\"]"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "What are anomalies with suspicious volume of logins to user account? Show the historical counts of suspicious logins.", "baseline": "Anomalies\n| where AnomalyTemplateName == \"Suspicious volume of logins to user account with elevated token\"\n| extend HistoricalCounts = AnomalyReasons[0][\"TypicalObservations\"][\"Historic counts\"]"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "Count how many anomalies with customzied anomalous Azure operations by anomaly reasons?", "baseline": "Anomalies\n| where AnomalyTemplateName == \"Anomalous Azure operations - Customized\"\n| summarize Count = count() by tostring(AnomalyReasons[0][\"Name\"])"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Anomalies", "context": "Show the description of UEBA anomalous privilege granted?", "baseline": "Anomalies\n| where AnomalyTemplateName == \"UEBA Anomalous Privilege Granted\"\n| project Description"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - WindowsFirewall", "context": "What are outgoing traffic networks from 2024/03/08 to 2024/03/09?", "baseline": "WindowsFirewall\n| where TimeCollected between  (datetime(2024-03-08) .. datetime(2024-03-09))"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "List all events related to create user, accesskey and group", "baseline": "\nAWSCloudTrail\n| where EventName in (\"CreateUser\",\"CreateAccessKey\", \"CreateGroup\")"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "Show me all events related to creation of role", "baseline": "AWSCloudTrail \n| where RequestParameters has \"CreateRole\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "Q1. For last 7 days list all policy modification such as attach, create,delete,detach,put.", "baseline": "AWSCloudTrail\n| where TimeGenerated > ago(7d)\n| where  EventName contains \"policy\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "In last 30 days, list all the events related Login Profile Update", "baseline": "AWSCloudTrail\n| where TimeGenerated > ago(30d)\n| where  EventName == \"UpdateLoginProfile\"\n| project TimeGenerated,EventName,UserIdentityType,UserIdentityPrincipalid,UserIdentityAccountId,SessionMfaAuthenticated"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "Show me all events related to user enumeration like ListAccessKeys, ListUsers, ListGroups, ListRolePolicies, GetCallerIdentity", "baseline": "AWSCloudTrail \n| where EventName in (\"ListAccessKeys\", \"ListUsers\", \"ListGroups\", \"ListRolePolicies\", \"GetCallerIdentity\")"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "For last 24 days, List all events related to S3 Bucket deletion", "baseline": "AWSCloudTrail\n| where TimeGenerated > ago(24d)\n| where  EventName == \"DeleteBucket\"\n| extend BucketName = parse_json(RequestParameters)\n| extend BucketName = BucketName.bucketName\n| extend BucketName1 = parse_json(RequestParameters)\n| extend Host = BucketName1.Host\n| project TimeGenerated, EventTypeName,EventName,BucketName,Host,UserIdentityType,UserIdentityPrincipalid,UserIdentityAccountId,SessionIssuerUserName,SourceIpAddress,UserAgent"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "List all events related to suspend bucket versioning", "baseline": "AWSCloudTrail\n  | where EventName == \"PutBucketVersioning\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "Give me all the events related to Network ACL deletion", "baseline": "AWSCloudTrail\n    | where EventName == \"DeleteNetworkAclEntry\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "List all events of modification of VPC and Subnet attributes", "baseline": "AWSCloudTrail\n  | where  EventName == \"ModifyVpcAttribute\" or EventName == \"ModifySubnetAttribute\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AWSCloudTrail", "context": "Q1.In last 24 hours, show me events related to deletion or stopping logging\nQ2. For last 24 days, show me events having UpdateTrail,DeleteTrail,StopLogging,DeleteFlowLogs,DeleteEventBus,DeleteLogGroup", "baseline": "AWSCloudTrail\n  | where TimeGenerated > ago(24d)\n  | where EventName in~ (\"UpdateTrail\",\"DeleteTrail\",\"StopLogging\",\"DeleteFlowLogs\",\"DeleteEventBus\",\"DeleteLogGroup\")"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "For last 7 days, list all service principal names and project a table having TimeGenerated, ServicePrincipalName, ServicePrincipalId, AppId and IPAddress", "baseline": "\nAADServicePrincipalSignInLogs\n| where TimeGenerated > ago(7d)\n| project  TimeGenerated, ServicePrincipalName,ServicePrincipalId, AppId, IPAddress"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "For last 7 days, list all MS Apps and project  TimeGenerated,Authkey,Authvalue,ServicePrincipalName,ServicePrincipalId, AppId, IPAddress,country,city,state", "baseline": "AADServicePrincipalSignInLogs\n| where TimeGenerated > ago(7d)\n| extend locationdetails = parse_json(LocationDetails)\n| extend country = locationdetails.countryOrRegion\n| extend city = locationdetails.city\n| extend state = locationdetails.state\n| extend Authdetails = parse_json(AuthenticationProcessingDetails)\n| extend Authdetails = Authdetails.[0]\n| extend Authkey = Authdetails.key\n| extend Authvalue = tostring(Authdetails.value)\n| project TimeGenerated,Authkey,Authvalue,ServicePrincipalName,ServicePrincipalId, AppId, IPAddress,country,city,state\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "For last 7 days, list all successful sign-ins of  service principal name", "baseline": "\nAADServicePrincipalSignInLogs\n| where TimeGenerated > ago(7d)\n| where ResultType == \"0\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "For last 30 days, list all  Microsoft Graph sign-in activity", "baseline": "\nAADServicePrincipalSignInLogs\n| where TimeGenerated > ago(30d)\n| where ResourceDisplayName == \"Microsoft Graph\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "For last 7 days, Find Azure AD service principals that have only signed in from a single IP address.", "baseline": "let appid=\n    AADServicePrincipalSignInLogs\n    | where TimeGenerated > ago (7d)\n    | where ResultType == 0\n    | summarize dcount(IPAddress) by AppId\n    | where dcount_IPAddress == 1\n    | distinct AppId;\nAADServicePrincipalSignInLogs\n| where TimeGenerated > ago (30d)\n| where ResultType == 0\n| where AppId in (appid)\n| summarize ['Application Ids']=make_set(AppId) by IPAddress, ServicePrincipalName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "For last 30 days, list all Azure Key Vault sign-in activity and make a set for ServicePrincipalName and AppId by IPAddress", "baseline": "AADServicePrincipalSignInLogs\n| where TimeGenerated > ago(30d)\n| where ResourceDisplayName == \"Azure Key Vault\"\n| summarize make_set(ServicePrincipalName), make_set(AppId) by IPAddress"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "\nFor last 30 days, list all service prinicpal name having invalid or expired client secret", "baseline": "AADServicePrincipalSignInLogs\n| where TimeGenerated > ago(30d)\n| where ResultType == \"7000215\" or ResultType == \"7000222\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "List all service principal sign ins from Sweden in the last 7 days?", "baseline": "AADServicePrincipalSignInLogs\n| where Location == \"SE\"\n| where TimeGenerated >= ago(7d)"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADServicePrincipalSignInLog", "context": "Can you group and count all Windows Azure Service Management API activity by Operation Name?", "baseline": "AADServicePrincipalSignInLogs\n| where ResourceDisplayName == \"Windows Azure Service Management API\"\n| summarize Count=count() by OperationName\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageBlobLogs", "context": "Count how many times a file is successfully deleted within 10 minutes per caller IP address, user agent, and associated account name? Show results of files that are deleted at least three times.", "baseline": "\n let deleteThreshold = 3;\n  let deleteWindow = 10m;\n  union\n  StorageFileLogs,\n  StorageBlobLogs\n  | where StatusText =~ \"Success\"\n  | where OperationName =~ \"DeleteBlob\" or OperationName =~ \"DeleteFile\"\n  | extend CallerIpAddress = tostring(split(CallerIpAddress, \":\", 0)[0])\n  | summarize dcount(Uri) by bin(TimeGenerated, deleteWindow), CallerIpAddress, UserAgentHeader, AccountName\n  | where dcount_Uri >= deleteThreshold\n  | project TimeGenerated, IPCustomEntity=CallerIpAddress, UserAgentHeader, FilesDeleted=dcount_Uri, AccountName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageBlobLogs", "context": "Show the operation and reason for failure for storage blob services that wasn't successful?", "baseline": "StorageBlobLogs\n| where StatusCode != 201 and StatusCode != 200\n| project OperationName, StatusText"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageBlobLogs", "context": "What are storage blob services from the account \"copilotlogicapp\" generated in the past 7 days?", "baseline": "StorageBlobLogs\n| where TimeGenerated >= ago(7d)\n| where AccountName == \"copilotlogicapp\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SecurityIncident", "context": "Show new security incidents related to cloud app events with medium severity?", "baseline": "SecurityIncident\n| where Title contains \"CloudAppEvents\"\n| where Severity == \"Medium\" and Status == \"New\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SecurityIncident", "context": "Count how many security incidents involving an inctive sign in of 60 days or more per owner?", "baseline": "SecurityIncident\n| where Title == \"Inactive Sign in 60 days or more involving multiple users\"\n| summarize Count=count() by tostring(Owner.userPrincipalName)"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SecurityIncident", "context": "Count security incidents that are highly severe and are new or active by title of incident per title?", "baseline": "SecurityIncident\n| where Severity == \"High\"\n| where Status != \"Closed\"\n| summarize Count=count() by Title"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SecurityIncident", "context": "Count how many security incidents with more than 3 alerts per title?", "baseline": "SecurityIncident\n| where AdditionalData.alertsCount > 3\n| summarize Count=count() by Title"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SecurityIncident", "context": "What are security incidents in the last 7 days modified by incident created from alert?", "baseline": "SecurityIncident\n| where TimeGenerated >= ago(7d)\n| where ModifiedBy == \"Incident created from alert\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Event", "context": "Show the 100 latest error events from Event table that are permission related", "baseline": "Event\n| where EventLevelName == \"Error\"\n| where RenderedDescription contains \"permission\"\n| top 100 by TimeGenerated desc"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - HeartBeat", "context": "Show computers that send heartbeat signals from more than one IP addres", "baseline": "Heartbeat\n| summarize ips=make_set(ComputerIP) by Computer\n| extend IPcount = array_length(ips)\n| where IPcount > 1\n| sort by IPcount desc"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - HeartBeat", "context": "Show the latest heartbeat for all windows machines", "baseline": "Heartbeat\n| summarize arg_max(TimeGenerated,*) by Computer\n| where OSType == \"Windows\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADNonInteractiveUserSignInLogs", "context": "Show the time, operation name, status, and IP addresses of all non-interactive sign in logs into Windows Defender ATP?", "baseline": "AADNonInteractiveUserSignInLogs\n| where AppDisplayName == \"WindowsDefenderATP\"\n| project TimeGenerated, OperationName, Status, IPAddress"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADNonInteractiveUserSignInLogs", "context": "Count how many guests per app name there are in the non interactive sign in logs in the past 7 days?", "baseline": "AADNonInteractiveUserSignInLogs\n| where TimeGenerated >= ago(7d)\n| where UserType == \"Guest\"\n| summarize Count=count() by AppDisplayName\n| sort by Count"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADNonInteractiveUserSignInLogs", "context": "Show the app name and status  of non interactive sign in logs that result in failure that are not in the U.S.?", "baseline": "AADNonInteractiveUserSignInLogs\n| where ResultType != 0\n| where Location != \"US\"\n| project AppDisplayName, Status\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADNonInteractiveUserSignInLogs", "context": "Count how many non-interactive sign in's with successful conditional access into Microsoft Graph per identity in the last 7 days? ", "baseline": "AADNonInteractiveUserSignInLogs\n| where TimeGenerated >= ago(7d)\n| where ConditionalAccessStatus == \"success\" and  ResourceDisplayName == \"Microsoft Graph\"\n| summarize Count=count() by Identity\n| sort by Count"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADNonInteractiveUserSignInLogs", "context": "Give me all successful non interactive user sign in logs generated in the past 7 days where the operation is a sign-in activity and user type is member?", "baseline": "AADNonInteractiveUserSignInLogs\n| where TimeGenerated >= ago(7d)\n| where ResultType == 0 and OperationName == \"Sign-in activity\" and UserType == \"Member\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADNonInteractiveUserSignInLogs", "context": "Provide all non interactive sign in logs generated in the past 7 days that is not interactive?", "baseline": "AADNonInteractiveUserSignInLogs\n| where TimeGenerated >= ago(7d)\n| where IsInteractive == \"false\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADNonInteractiveUserSignInLogs", "context": "Count how many non interactive sign ins into Windows Azure Service Management API per Identity and Location?", "baseline": "AADNonInteractiveUserSignInLogs\n| where ResourceDisplayName == \"Windows Azure Service Management API\"\n| summarize Count=count() by Identity, Location"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "Show all descriptions of Threat Intelligence Indicators with a confidence score of 100?", "baseline": "ThreatIntelligenceIndicator\n| where ConfidenceScore == 100\n| distinct Description"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "What are all Threat Intelligence Indicators from \"Microsoft Defender Threat Intelligence\"?", "baseline": "ThreatIntelligenceIndicator\n| where SourceSystem == \"Microsoft Defender Threat Intelligence\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "What are all Threat Intelligence Indicators that involve malware activity?", "baseline": "ThreatIntelligenceIndicator\n| where Description contains \"malware\"\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "Can you show 100 entries that match any IP address threat indicators with any IP address found in the AzureActivity table in the last 7 days?", "baseline": "let TimeRange = 7d;\nlet ThreatIndicators = ThreatIntelligenceIndicator\n| where isnotnull(NetworkSourceIP); \nAzureActivity\n| where TimeGenerated >= ago(TimeRange)\n| where isnotnull(CallerIpAddress)\n| join kind=inner (ThreatIndicators) on $left.CallerIpAddress == $right.NetworkSourceIP\n| limit 100"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "What are the email addresses of the top 10 senders of Threat Intelligence Indicators?", "baseline": "ThreatIntelligenceIndicator\n| summarize Count=count() by EmailSenderAddress\n| top 10 by Count desc\n\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "What are all Threat Intelligence Indicators that have a threat severity of 3 or above in the last week?", "baseline": "ThreatIntelligenceIndicator\n| where TimeGenerated >= ago(7d)\n| where ThreatSeverity >= 3"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "Can you list 100 entries that match any Network IP address threat indicators with IP address found in the SignIn Logs table in the last 7 days? ", "baseline": "let TimeRange = 7d;\nlet ThreatIndicators = ThreatIntelligenceIndicator\n| where isnotnull(NetworkSourceIP); \nSigninLogs\n| where TimeGenerated >= ago(TimeRange)\n| where isnotnull(IPAddress)\n| join kind=inner (ThreatIndicators) on $left.IPAddress == $right.NetworkSourceIP\n| limit 100"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - ThreatIntelligenceIndicator", "context": "Count how many BotNet Threat types per description?", "baseline": "ThreatIntelligenceIndicator\n | where ThreatType == \"Botnet\"\n | summarize Count=count() by Description"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "Can you give me Syslogs where the severity level is \"notice\" in the last 7 days?", "baseline": "Syslog\n| where TimeGenerated >= ago(7d)\n| where SeverityLevel == \"notice\"\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "In the past 7 days, what are Syslogs where the host is \"gavmubuntu01\"?", "baseline": "Syslog\n| where TimeGenerated >= ago(7d)\n| where HostName == \"gavmubuntu01\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "Show me the time, host name and message for all error or warning syslog messages.", "baseline": "Syslog\n| where tostring(SyslogMessage) contains \"error\" or tostring(SyslogMessage) contains \"warning\"\n| project TimeGenerated, HostName, SyslogMessage\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "Can you give me Syslogs where the facility is auth? Show time generated, host name, and syslog message. ", "baseline": "Syslog\n| where Facility == 'auth'\n| project TimeGenerated, HostName, SyslogMessage\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "Show the messages of all sys logs where the process name is \"sudo\" in the last 7 days?", "baseline": "Syslog\n| where TimeGenerated >= ago(7d)\n| where ProcessName == \"sudo\"\n| project SyslogMessage"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "Can you give me Syslogs messages for session 12912?", "baseline": "Syslog\n| where SyslogMessage contains \"Session 12912\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "Can you show the count for each type of Computer for Syslog where the Source System is \"Linux\"?", "baseline": "Syslog\n| where SourceSystem == \"Linux\"\n| summarize Count=count() by Computer"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - Syslog", "context": "Can you provide syslogs in the past 7 days from the computer \"splunk server\"?", "baseline": "Syslog\n| where TimeGenerated >= ago(7d)\n| where Computer == \"splunk-server\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "What are all behaviors in the last 7 days where the user fails to log on? ", "baseline": "BehaviorAnalytics\n| where TimeGenerated >= ago(7d)\n| where ActivityType == \"FailedLogOn\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "Count the number of failed logins per username in the past 7 days?", "baseline": "BehaviorAnalytics\n| where TimeGenerated >= ago(7d)\n| where ActivityType == \"FailedLogOn\"\n| summarize Count = count() by UserName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "Show the type of activity, action, user name, and source IP Address of all behaviors in the last 24 days from security event?", "baseline": "BehaviorAnalytics\n| where TimeGenerated >= ago(24d)\n| where EventSource == \"SecurityEvent\"\n| project ActivityType, ActionType, UserName, SourceIPAddress"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "Count all behaviors with destination device \"SQL2022CRM\" per event source in the past week?", "baseline": "BehaviorAnalytics\n| where TimeGenerated >= ago(7d)\n| where DestinationDevice == \"SQL2022CRM\"\n| summarize Count = count() by EventSource"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "\nCount behaviors from user: \"sales\" per threat intelligence indicator type and threat intelligence indicator description in the past 7 days?", "baseline": "BehaviorAnalytics\n| where TimeGenerated >= ago(7d)\n| where UserName == \"sales\"\n| extend IndicatorType = tostring(DevicesInsights[\"ThreatIntelIndicatorType\"])\n| extend IndicatorDescription = tostring(DevicesInsights[\"ThreatIntelIndicatorDescription\"])\n| summarize Count = count() by IndicatorType, IndicatorDescription "}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "Count behaviors with Destination Device \"Window11ptest\" per source IP location in the past week?", "baseline": "BehaviorAnalytics\n| where TimeGenerated >= ago(7d)\n| where DestinationDevice == \"Window11ptest\"\n| summarize Count = count() by SourceIPLocation\n| sort by Count"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "What are high risky behaviors where users fail to log on? Show me 100 entries with the user name, and location of source.", "baseline": "BehaviorAnalytics\n| where TimeGenerated >= ago(7d)\n| join kind=inner (AADRiskyUsers\n    | where RiskLevel == \"high\"\n) on $left.UserPrincipalName == $right.UserPrincipalName\n| where ActivityType == \"FailedLogOn\"\n| project UserName, SourceIPLocation\n | limit 100"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - BehaviorAnalytics", "context": "Show all behaviour analytics linked with account domain \"GAVM2019\"?", "baseline": "BehaviorAnalytics\n| where UsersInsights[\"AccountDomain\"] == \"GAVM2019\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "Count risky users with high risk level per risk tate in the past 7 days?", "baseline": "AADRiskyUsers\n| where TimeGenerated >= ago(7d)\n| where RiskLevel == \"high\"\n| summarize Count=count() by RiskState"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "What are all AADRiskyUsers in the last week that are remediated?", "baseline": "AADRiskyUsers\n| where TimeGenerated >= ago(7d)\n| where RiskState == \"remediated\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "What are all AADRiskyUsers in the last week involving a password reset?", "baseline": "AADRiskyUsers\n| where TimeGenerated >= ago(7d)\n| where RiskDetail contains \"passwordreset\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "list 100 Azure Activities performed by \"PDemo@seccxpninja.onmicrosoft.com\" with a low risk level", "baseline": "AADRiskyUsers\n| where TimeGenerated >= ago(7d)\n| join kind=inner (AzureActivity) on $left.TenantId == $right.TenantId\n| where UserPrincipalName == \"PDemo@seccxpninja.onmicrosoft.com\" and RiskLevel == \"low\" \n | limit 100"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "What are all AADRiskyUsers in the last 24 days named \"Partner Demo\"?", "baseline": "AADRiskyUsers\n| where TimeGenerated >= ago(24d)\n| where UserDisplayName == \"Partner Demo\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "Count risky users per risk level?", "baseline": "AADRiskyUsers\n| summarize Count=count() by RiskLevel"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "Can you show me all AADRiskyUsers in the last 7 days not being processed in the backend and not deleted?", "baseline": "AADRiskyUsers\n| where TimeGenerated >= ago(7d)\n| where IsProcessing == \"false\"\n| where IsDeleted == \"false\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADRiskyUsers", "context": "Show risk details, level, and user name of risky users still at risk?", "baseline": "AADRiskyUsers\n| where RiskState == \"atRisk\"\n| project RiskDetail, RiskLevel, UserDisplayName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Show reasons for risk events related to unfamiliar features?", "baseline": "AADUserRiskEvents\n| where RiskEventType == \"unfamiliarFeatures\"\n| extend RiskReasons = tostring(AdditionalInfo[0][\"Value\"])\n| distinct RiskReasons"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Show all risk events from the past 7 days where users logged in from Burnaby?", "baseline": "AADUserRiskEvents\n| where TimeGenerated >= ago(7d)\n| where Location.city == \"Burnaby\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Show risk level, state, location, activity, and reasons for all user risk events generated within the last 7 days from \"Partner Demo\"?", "baseline": "AADUserRiskEvents\n| where TimeGenerated >= ago(7d)\n| where UserDisplayName == \"Partner Demo\"\n| extend RiskReasons = AdditionalInfo[0][\"Value\"]\n| project RiskLevel, RiskState, Location.city, Activity, RiskReasons"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Show the activity, location, and user agent of all medium level unlikely travel risk events detected offline?", "baseline": "AADUserRiskEvents\n| where DetectionTimingType == \"offline\"\n| where RiskEventType == \"unlikelyTravel\"\n| where RiskLevel == \"medium\"\n| project Activity, Location, UserAgent = AdditionalInfo[0][\"Value\"]"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "What are all risky Azure activities that are \"unlikely travel\"? Show the user, activity, risk level, and location.", "baseline": "AADUserRiskEvents\n| where RiskEventType == \"unlikelyTravel\"\n| project UserPrincipalName, Activity, RiskLevel, City = Location[\"city\"], State = Location[\"state\"]"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Show user name, operation, activity, and reasons for unfamiliar features located in California?", "baseline": "AADUserRiskEvents\n| where Location[\"state\"] == \"California\"\n| where RiskEventType == \"unfamiliarFeatures\"\n| project UserDisplayName, OperationName, Activity, RiskReasons = AdditionalInfo[0][\"Value\"]"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Count all risks where risk event is unlikely travel per cities?", "baseline": "AADUserRiskEvents\n| where RiskEventType == \"unlikelyTravel\"\n| summarize Count=count() by tostring(Location[\"city\"])"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Show all realtime user risk detections of the past 7 days?", "baseline": "AADUserRiskEvents\n| where TimeGenerated >= ago(7d)\n| where DetectionTimingType == \"realtime\" and OperationName == \"User Risk Detection\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - AADUserRiskEvents", "context": "Show new countries users logged in from?", "baseline": "AADUserRiskEvents\n| where Activity == \"signin\"\n| where RiskEventType == \"newCountry\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "What was the last error and Machine ID for unprotected \"MSSQLSERVER\" instances", "baseline": "SqlAtpStatus\n| where SqlInstanceName == \"MSSQLSERVER\"\n| where Status == \"Not Protected\"\n| project LastError, MachineUUID"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "What are SQL ATP Status generated in the last 7 days where the Computer is \"HRDB2012\"?", "baseline": "SqlAtpStatus\n| where TimeGenerated >= ago(7d)\n| where Computer == \"HRDB2012\"\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "What are SQL ATP Status generated in the last week where the Computer is \"HRDB2012\" and the Status is \"Protected\"?", "baseline": "SqlAtpStatus\n| where TimeGenerated >= ago(7d)\n| where Computer == \"HRDB2012\"\n| where Status == \"Protected\"\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "Show the Computer, Sql Instance Name, and Status of SQL ATP Statuses where the last error is \"Failed to create audit session\"?", "baseline": "SqlAtpStatus\n| where LastError == \"Failed to create audit session.\"\n| project Computer, SqlInstanceName, Status"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "Show the Computer, Last Error, and Identity of SQL ATP Statuses where the Source System is Azure?", "baseline": "SqlAtpStatus\n| where SourceSystem == \"Azure\"\n| project Computer, LastError"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "Show SQL ATP Statuses where the the start time of the Microsoft Monitoring Agent process running SQL ATP solution is later than 2024/02/08?", "baseline": "SqlAtpStatus\n| where AgentStartTime > datetime(\"2024-02-08\")"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "Can you show 100 entries that match any Tenant ID in SQL ATP Status with any Tenant ID found in Azure Activity table where the status is \"Not Protected\", and the start time of the Microsoft Monitoring Agent process running SQL ATP solution is?", "baseline": "SqlAtpStatus\n| join kind=inner (AzureActivity) on $left.TenantId == $right.TenantId\n| where Status == \"Not Protected\"\n| limit 100\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - SqlAtpStatus", "context": "Show count of computer and status in SQL ATP Status table?", "baseline": "SqlAtpStatus\n| summarize Count=count() by Computer, Status\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "What are all storage files named \"honeytokensdemosa\" created in the last week?", "baseline": "StorageFileLogs\n| where TimeGenerated >= ago(7d)\n| where OperationName == \"Create\"\n| where AccountName == \"honeytokensdemosa\"\n"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "Count all storage files in the east US per operation name?", "baseline": "StorageFileLogs\n| where Location == \"eastus\"\n| summarize Count=count() by OperationName\n| sort by Count"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "Count all storage files in the central US closing access to the service's resources per account name?", "baseline": "StorageFileLogs\n| where Location == \"centralus\"\n| where OperationName == \"Close\"\n| summarize Count=count() by AccountName\n| sort by Count"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "Show category and name of unsuccessful operations from \"copilotlogicappgroua0df\"?", "baseline": "StorageFileLogs\n| where AccountName == \"copilotlogicappgroua0df\" and MetricResponseType != \"Success\"\n| project Category, OperationName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "Show storage file logs querying info, where the category is reading the storage, with a performance less than 30 ms?", "baseline": "StorageFileLogs\n| where OperationName == \"QueryInfo\"\n| where Category == \"StorageRead\"\n| where DurationMs < 30"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "Show Storage file located in central US where the the network path was not found?", "baseline": "StorageFileLogs\n| where StatusCode == -1073741772\n| where Location == \"centralus\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "Show account name, location, and protocal of storage files querying info with a client error?", "baseline": "StorageFileLogs\n| where MetricResponseType == \"ClientOtherError\"\n| where OperationName == \"QueryInfo\"\n| project AccountName, Location, Protocol"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - StorageFileLogs", "context": "What are Storage file logs that takes less than 10 MS to query info?", "baseline": "StorageFileLogs\n| where OperationName == \"QueryInfo\"\n| where ServerLatencyMs < 10"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "What are VM Connections generated in the last 7 days where the direction is inbound and process name is \"svchost\"?", "baseline": "VMConnection\n| where TimeGenerated >= ago(7d)\n| where Direction == \"inbound\"\n| where ProcessName == \"svchost\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "Count VM Connections where the direction is outbound by destination ports?", "baseline": "VMConnection\n| where Direction == \"outbound\"\n| summarize Count=count() by DestinationPort"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "Count VM connections per direction, bytes sent, and bytes received?", "baseline": "VMConnection\n| summarize Count=count() by Direction, BytesSent, BytesReceived\n| sort by Count"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "What is the average maximum of all response times observed during the reporting time window in milliseconds?", "baseline": "VMConnection\n| where Computer == \"SQL2017CRM\"\n| summarize AverageTime = avg(ResponseTimeSum)"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "Show the Direction and Process Name of VM Connections where Netherlands is hosting RemoteIp?", "baseline": "VMConnection\n| where RemoteCountry == \"Netherlands\"\n| project Direction, ProcessName"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "In the past 10 days, what are all VM Connections where the Remote DNS Question contains the domain \"azure.com\"?", "baseline": "VMConnection\n| where TimeGenerated >= ago(10d)\n| where RemoteDnsQuestions contains \"azure.com\""}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "Count VM connections going outbound per country hosting RemoteIP.", "baseline": "VMConnection\n| where Direction == \"outbound\"\n| summarize Count=count() by RemoteCountry"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - VMConnection", "context": "Count VM Connections where the process name is \"Health Service\" per severity?", "baseline": "VMConnection\n| where ProcessName == \"HealthService\"\n| summarize Count=count() by Severity"}
{"Data source": "NL-KQL Sentinel pairs for GA.xlsx - DnsEvents", "context": "Join DNSEvents and AzureActivity on IP Address to display the computer name, operation name, and event ID of all successful DNS events, limited to 100 entries.", "baseline": "DnsEvents\n| join kind=inner (AzureActivity) on $left.IPAddresses == $right.CallerIpAddress\n| where Result == \"Success\"\n| project Computer, OperationNameValue, EventId \n| limit 100"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "Show all firewall events where a policy was changed grouped by computer", "baseline": "Event\n| where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008\n| summarize count() by Computer"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "Show me 100 pc events having event id 1074 from Event table. sort in descending order by TimeGenerated and Computer.", "baseline": "Event\n| where EventLog == \"System\" and Source == \"User32\" and EventID == 1074\n| search \"pc\"\n| sort by TimeGenerated desc\n| project TimeGenerated, Computer\n| limit 100"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "Show the top 10 most often occuring EventIds in the Event table", "baseline": "Event\n| summarize count() by EventID\n| top 10 by count_"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "Get all warning events from Event table and count by Event ID.", "baseline": "Event\n| where EventLevelName == \"warning\"\n| summarize count() by EventID"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "Search for word started in Event table. show the count by event ids. ", "baseline": "Event\n| where RenderedDescription contains \"started\"\n| summarize count() by EventID"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "For last 7 days show me all the events from Event table and sort the time generation in descending order.", "baseline": "Event\n| where TimeGenerated > ago(7d)\n| sort by TimeGenerated desc"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "Count how many computers started downloading a windows update in the past 24 days", "baseline": "Event\n| where TimeGenerated > ago(24d)\n| where EventID == 44\n| summarize count() by Computer"}
{"Data source": "MSECR_Comments.xlsx - Event", "context": "List events where the fslogix app encountered a corrupt file", "baseline": "Event\n| where Source == 'FSLogix-Apps'\n| where EventID == 25"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "Get/show me the list of computers alive for the last 7 days?", "baseline": "Heartbeat\n| summarize LastHeartbeat=max(TimeGenerated) by Computer\n| where LastHeartbeat > ago(7d)"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "Get/show me the list of computers alive for the last 365 hours?", "baseline": "Heartbeat\n| where TimeGenerated > ago(365d)\n| summarize Count=dcount(Computer)by Month=startofmonth(TimeGenerated)\n| render columnchart with (title=\"Distinct monthly computers sending data to Microsoft Sentinel\")"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "Show me all computers where the last heartbeat is not more than 24 days", "baseline": "Heartbeat\n| where TimeGenerated > ago(24d)\n| summarize LastCall = max(TimeGenerated) by Computer, _ResourceId"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "Calculate availability rate for all computers for the last 24 days. a computer is available if it has at least one heartbeat event every day", "baseline": "Heartbeat\n| where TimeGenerated > ago(24d)\n| summarize heartbeatPerHour = count() by bin_at(TimeGenerated, 1d, ago(24d)), Computer\n| extend availablePerHour = iff(heartbeatPerHour > 0, true, false)\n| summarize totalAvailableHours = countif(availablePerHour == true) by Computer\n| extend availabilityRate = totalAvailableHours*100.0/24"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "get the most recent heartbeat record for each computer", "baseline": "Heartbeat\n| summarize arg_max(TimeGenerated, *) by Computer"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "Show the last heartbeat event for all windows devices", "baseline": "Heartbeat\n| summarize arg_max(TimeGenerated, *) by Computer\n| where OSType == 'Windows'"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "retrieve the heartbeat records from the past 7 days.", "baseline": "Heartbeat\n| where TimeGenerated > ago(7d)"}
{"Data source": "MSECR_Comments.xlsx - Heartbeat", "context": "retrieve the most recent heartbeat record for each unique computer IP address", "baseline": "Heartbeat\n| summarize arg_max(TimeGenerated, *) by ComputerIP"}
{"Data source": "MSECR_Comments.xlsx - StorageBlobLogs", "context": "Show all blob list and properties operations from users authenticated with oauth", "baseline": "StorageBlobLogs\n| where AuthenticationType == 'OAuth'\n| where not(OperationName has_any('GetBlobServiceProperties', 'ListBlobs'))"}
{"Data source": "MSECR_Comments.xlsx - StorageBlobLogs", "context": "get the stats of successful anonymous access to Blob storage for the last 15day", "baseline": "StorageBlobLogs\n| where TimeGenerated > ago(15d)\n| where ServiceType == \"blob\"\n| where Type == \"StorageBlobLogs\"\n| where AuthenticationType == \"Anonymous\"\n| where StatusCode == \"200\""}
{"Data source": "MSECR_Comments.xlsx - StorageBlobLogs", "context": "Show the top 10 storage blob status messages that don't contain success for the past 7 days", "baseline": "StorageBlobLogs\n| where TimeGenerated > ago(7d) \n| where StatusText !contains \"Success\"\n| summarize count() by StatusText\n| top 10 by count_ desc"}
{"Data source": "MSECR_Comments.xlsx - StorageBlobLogs", "context": "I want to know the operation name, duration, client and server latency for the storage blob events that have the longest duration", "baseline": "StorageBlobLogs\n| top 10 by DurationMs desc\n| extend ClientLatencyMS = DurationMs - ServerLatencyMs\n| project TimeGenerated, OperationName, DurationMs, ServerLatencyMs, ClientLatencyMS"}
{"Data source": "MSECR_Comments.xlsx - StorageBlobLogs", "context": "get the operations performed on storage blobs where anonymous authentication was used", "baseline": "StorageBlobLogs\n| where AuthenticationType == \"Anonymous\"\n| project TimeGenerated, OperationName, AuthenticationType, Uri"}
{"Data source": "MSECR_Comments.xlsx - StorageBlobLogs", "context": "get the storage blob operations that encountered a \"ServerBusy\" status", "baseline": "StorageBlobLogs\n| where StatusText contains \"ServerBusy\""}
{"Data source": "MSECR_Comments.xlsx - StorageBlobLogs", "context": "Sort all storage blob operations during the past 7 days by count ", "baseline": "StorageBlobLogs\n| where TimeGenerated > ago(7d)\n| summarize count() by OperationName\n| sort by count_ desc"}
{"Data source": "MSECR_Comments.xlsx - W3CIISLog", "context": "count W3CIISlogs by scStatus", "baseline": "W3CIISLog\n| summarize count() by scStatus"}
{"Data source": "MSECR_Comments.xlsx - W3CIISLog", "context": "count W3CIISlogs by csUserAgent", "baseline": "W3CIISLog\n| summarize count() by csUserAgent"}
{"Data source": "MSECR_Comments.xlsx - W3CIISLog", "context": "Count 404 logs by URI stem for W3 events and sort descending", "baseline": "W3CIISLog\n| where scStatus == 404\n| summarize count() by csUriStem\n| sort by count_ desc"}
{"Data source": "MSECR_Comments.xlsx - W3CIISLog", "context": "Count internal server failures by computer name for W3 logs", "baseline": "W3CIISLog\n| where scStatus == \"500\"\n| summarize count() by sComputerName"}
{"Data source": "MSECR_Comments.xlsx - W3CIISLog", "context": "get the stats on data usage for both incoming and outgoing traffic per client IP address", "baseline": "W3CIISLog\n| summarize BytesSent = sum(csBytes), BytesReceived = sum(scBytes) by cIP"}
{"Data source": "MSECR_Comments.xlsx - W3CIISLog", "context": "show the 50 latest W3 log events", "baseline": "W3CIISLog\n| top 50 by TimeGenerated desc"}
{"Data source": "NL2KQL - Security Co-Pilot.xlsx - NLKQL pairs", "context": "Search on our Threat Intel feed about the IP address. show me Ips that match any in the list [192.168.1.1, 123.10.12.1, 10.10.10.10]", "baseline": "let IPaddresses = dynamic([\"192.168.1.1\", \"123.10.12.1\", \"10.10.10.10\"]);\nThreatIntelligenceIndicator\n| where Active == 'true'\n| where isnotempty(NetworkIP) or isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkSourceIP)\n| extend TI_ipEntity = iff(isnotempty(NetworkIP), NetworkIP, NetworkDestinationIP)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(NetworkSourceIP), NetworkSourceIP, TI_ipEntity)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(EmailSourceIpAddress), EmailSourceIpAddress, TI_ipEntity)\n| where TI_ipEntity in~ (IPaddresses)"}
